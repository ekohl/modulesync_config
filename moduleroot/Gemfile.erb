<%
def gem_length(gem)
  if gem['from_env']
    version_len = " *location_for(ENV['#{gem['from_env']}'])".length + ((" || '#{gem['version']}'".length if gem['version']) || 0)
  else
    version_len = (", '#{gem['version']}'".length if gem['version']) || 0
  end

  gem['gem'].length + version_len
end

def gem_spec(gem, max_len)
  output = "\"#{gem['gem']}\""

  if gem['version']
    if gem['from_env']
      output += ", *location_for(ENV['#{gem['from_env']}'] || '#{gem['version']}')"
    else
      output += ", '#{gem['version']}'"
    end
  end

  options = []
  options << "require: false" if gem['from_env'].nil?
  options << "git: '#{gem['git']}'" unless gem['git'].nil?
  options << "branch: '#{gem['branch']}'" unless gem['branch'].nil?
  options << "ref: '#{gem['ref']}'" unless gem['ref'].nil?
  options << "platforms: #{gem['platforms'].inspect}" unless gem['platforms'].nil?

  unless options.empty?
    output += ', '
    output += ' ' * (max_len - gem['length'])

    output += options.join(', ')
  end

  output += " if #{gem['condition']}" unless gem['condition'].nil?

  output
end
-%>
source ENV['GEM_SOURCE'] || 'https://rubygems.org'

def location_for(place_or_version, fake_version = nil)
  git_url_regex = %r{\A(?<url>(https?|git)[:@][^#]*)(#(?<branch>.*))?}
  file_url_regex = %r{\Afile:\/\/(?<path>.*)}

  if place_or_version && (git_url = place_or_version.match(git_url_regex))
    [fake_version, { git: git_url[:url], branch: git_url[:branch], require: false }].compact
  elsif place_or_version && (file_url = place_or_version.match(file_url_regex))
    ['>= 0', { path: File.expand_path(file_url[:path]), require: false }]
  else
    [place_or_version, { require: false }]
  end
end

ruby_version_segments = Gem::Version.new(RUBY_VERSION.dup).segments
minor_version = ruby_version_segments[0..1].join('.')

<% groups = {} -%>
<% (@configs['required'].keys + ((@configs['optional'] || {}).keys)).uniq.each do |key| -%>
<%   groups[key] = (@configs['required'][key] || []) + ((@configs['optional'] || {})[key] || []) -%>
<% end -%>
<% -%>
<% groups.each do |group, gems| -%>
group <%= group %> do
<%
     gems.map! do |gem|
       {
         'gem'           => gem['gem'],
         'version'       => gem['version'],
         'platforms'     => gem['platforms'].nil? ? nil : Array[*gem['platforms']].map(&:to_sym),
         'git'           => gem['git'],
         'branch'        => gem['branch'],
         'ref'           => gem['ref'],
         'length'        => gem_length(gem),
         'from_env'      => gem['from_env'],
         'condition'     => gem['condition'],
       }
     end

     maxlen = gems.map { |r| r['length'] }.max
-%>
<%   gems.each do |gem| -%>
  gem <%= gem_spec(gem, maxlen) %>
<%   end -%>
end

<% end -%>


if facterversion = ENV['FACTER_GEM_VERSION']
  gem 'facter', facterversion.to_s, :require => false, :groups => [:test]
else
  gem 'facter', :require => false, :groups => [:test]
end

ENV['PUPPET_VERSION'].nil? ? puppetversion = '<%= @configs['puppet_version'] || '~> 6.0' %>' : puppetversion = ENV['PUPPET_VERSION'].to_s
gem 'puppet', puppetversion, :require => false, :groups => [:test]

# vim: syntax=ruby
